plugins {
    id 'application'
    id "io.freefair.lombok" version "8.4"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

ext {
    targetDockerImageName = 'nadberezny/flink-sessionizer-datagen'
    kafkaVersion = "3.5.1"
    jacksonVersion = '2.15.2'
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClassName = "com.getindata.sessionizer.datagen.Main"
    applicationDefaultJvmArgs = ["-Xms256m", "-Xmx2048m"]
}

tasks.register('dockerBuildAndPushImage', Exec) {
    String dockerTag = project.hasProperty("dockerTag")
            ? project.getProperty("dockerTag")
            : "git rev-parse HEAD".execute().text.trim()
    String dockerPlatform = project.hasProperty("dockerPlatform")
            ? project.getProperty("dockerPlatform")
            : "linux/amd64"

    commandLine 'docker', 'build', '--platform', dockerPlatform, '-t', "$targetDockerImageName:$dockerTag", '--push', "."
}
dockerBuildAndPushImage.dependsOn(installDist)


dependencies {
    // logging
    implementation platform("org.apache.logging.log4j:log4j-bom:2.20.0")
    implementation "org.apache.logging.log4j:log4j-slf4j2-impl"
    implementation "org.apache.logging.log4j:log4j-api"
    implementation "org.apache.logging.log4j:log4j-core"

    // externalized config
    implementation "com.typesafe:config:1.4.2"

    // utils
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'org.apache.commons:commons-rng-simple:1.5'

    // serde
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"

    // kafka
    implementation "org.apache.kafka:kafka-clients:$kafkaVersion"

    // test
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}
